// ------ VARIABLES ------ //
var negate = function(x){
  return x.startsWith("-") ? x.slice(1) : "-" + x
}

// args: vars: array with one array for each variable containing pos/neg tokens,
// e.g. [["A", "-A"], ["C", "-C"]]
var get_var_powerset = function(vars, include_empty_set){
  var powerset = Infer({model:function(){
                  var bools = repeat(vars.length, flip)
                  var tokens = mapIndexed(function(idx, b){
                    b ? uniformDraw(vars[idx]) : ""
                  }, bools)
                  return filter(function(t){t.length>0}, tokens)
                }}).support()
  include_empty_set ? powerset : filter(function(s){s.length > 0}, powerset)
}


// ----- GENERAL ----- //
var roundToN = cache(function(x){
  var m = Math.pow(10, rounded_digits)
  return Math.round(x*m)/m
}, 10000)

var intersect_arrays = function(arrays){
  return filter(function(m){
          var m_in_all_lists = map(function(idx){arrays[idx].indexOf(m) != -1},
                                  _.range(1,arrays.length))
          return sum(m_in_all_lists)==m_in_all_lists.length
    }, arrays[0])
}
