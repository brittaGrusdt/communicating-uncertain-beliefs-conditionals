// Model ---------------------------------------------------------------------
var literal_listener = cache(function(utterance){
  Infer({method:'enumerate',model: function(){
    var state = sample(globalStore.state_prior)
    condition(meaning(utterance, state["table"]))
    return state
  }})
}, 10000)

var speaker = cache(function(state, bias, displayU){
  let distr = Infer({method:'enumerate', model: function(){
    var utterance = uniformDraw(globalStore.utterances)
    var ll = literal_listener(utterance)
    var utility = ll.score(state)
    // utility == -Infinity ? utility : globalStore.alpha * (utility-costs(utterance))
    var add_ll = globalStore.alpha * (utility - costs(utterance))
    if(displayU && utility!=-Infinity){
      display(utterance + utility)
      // display(utterance + add_ll)
    }
    factor(add_ll)
    return(utterance)
    }
  });
 return(distr)
}, 10000)

var listener = function(utterance){
  return Infer({method:'enumerate', model:function(){
                  var state = sample(globalStore.state_prior)
                  var sp = speaker(state, "", false)
                  observe(sp, utterance)
                  return state
                }})
}
