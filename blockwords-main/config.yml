default:
  path_cleaned_data: !expr paste("data", "cleaned-data.csv", sep=.Platform$file.sep)
  dir_model_input: !expr paste("model", "data", sep = .Platform$file.sep)
  dir_webppl_model: !expr paste("model", "webppl-model", "default-model", sep = .Platform$file.sep)
  fn_rsa_model: "default-model.wppl"
  fn_gen_utts: "utterances.wppl"
  fn_predictions_by_context: "predictions-by-context.csv"
  fn_predictions_by_context_chunked: "predictions-by-context-chunked.csv"
  fn_joint_results: "exact-model-behavioral-predictions.csv"
  fn_tbls_empiric_pids: "tables-empiric-pids.rds"
  fn_tables_smooth: "pe_tables_smooth.csv"
  fn_results: "results-speaker.rds"
  fn_params: "params-speaker.rds"
  generate_utterances: false
  save: true
  cost_conditional: 0
  alpha: 3
  theta: 0.7
  verbose: true
  cns: !expr c("A implies C", "C implies A", "A implies -C", "C implies -A", "A || C")
  packages:  !expr c(paste("model", "webppl-model", "node_modules", 
                           "conditionalsHelpers", sep = .Platform$file.sep),
                     paste("model", "webppl-model", "node_modules", 
                           "conditionalsDefault", sep = .Platform$file.sep))
  model_path: !expr paste("model", "webppl-model", "default-model", 
                          "default-model.wppl", sep = .Platform$file.sep)
  #seed_webppl: !expr as.numeric(Sys.time())
  seed_webppl: 123467
  vars: !expr c("A", "C")
  level_max: "speaker"
  # @arg utt: - if set to "p_delta" or "p_rooij", respective value must be
  #           large (see in webppl file) for all states given to the speaker,
  #           - if set to "" no condition, just sampled from prior as usual
  utt: ""
  n_samples: 0 # bns given by empirical tables


abstract_state_prior:
  dir_results: !expr paste("model", "results", "abstract-prior", sep=.Platform$file.sep)
  fn_tables: "tables-abstract-prior-toWPPL.rds"
  fn_tables_with_empiric: "tables-abstract-prior-toWPPL-with-empirical.rds"
  fn_params_tables: "params-tables-abstract-prior.rds"
  fn_utterances: "utterances-abstract-prior.rds"
  fn_tables_mapping: "mapping-tables-abstract-prior-ids.rds"
  fn_uniq_tables: "tables-abstract-prior-unique-toWPPL.rds"
  #n_best_latent: 3
  seed_tables: 202008
  n_ind_tables: 6000
  n_dep_tables: 1500
  indep_sigma: 0.005
  beta_neg_a: 1
  beta_neg_b: 10
  beta_pos_a: 10
  beta_pos_b: 1
  beta_marg_a: 1
  beta_marg_b: 1

situation_specific_prior:
  dir_results: !expr paste("model", "results", "dirichlet-prior", sep=.Platform$file.sep)
  fn_tables: "tables-dirichlet-prior-toWPPL.rds"
  fn_tables_with_empiric: "tables-dirichlet-prior-toWPPL-with-empirical.rds"
  fn_params_tables: "params-tables-dirichlet-prior.rds"
  fn_utterances: "utterances-dirichlet-prior.rds"
  fn_tables_mapping: "mapping-tables-dirichlet-prior-ids.rds"
  fn_uniq_tables: "tables-dirichlet-prior-unique-toWPPL.rds"
  n_all_contexts: 13
  fn_simulated_p_by_context: "simulated-p-values-fitted-dirichlet.csv"
  fn_simulated_p_overall: "simulated-p-values-fitted-single-dirichlet.csv"
  seed_fitted_tables: "20202020"

process_data:
  dir_data: "data"
  dir_formatted_data_all: !expr paste("data", "formatted-all", sep=.Platform$file.sep)
  dir_formatted_data_cleaned: !expr paste("data", "formatted-cleaned", sep=.Platform$file.sep)
  fn_raw_data: "raw_results_54_blockwords-main_BG.csv"
  fn_formatted_data_all: "all-data.csv"
  fn_formatted_data_cleaned: "cleaned-data.csv"
  fn_uc_avg: "behavioral-avg-task2.csv"
  fn_uc_avg_chunked: "behavioral-avg-task2-chunked.csv"
  fn_quality_data: "test-data-prior-quality.rds"
  fn_ids_excluded: "ids_excluded.csv"
  fn_train_pe: "train-slider-ratings.csv"
  fn_train_attention: "train-attention.csv"
  fn_train_slider_choice: "train-slider-choice.csv"
  N_trials: !expr list(train = 14 + 3 + 10, 
                        test = 13 * 2 + 1, 
                        color_vision = 6,
                        slider_choice = 10, 
                        attention_check = 3)

# there needs to be 1 blank final line!
